// Code generated by Wire. DO NOT EDIT.

//go:generate wire
//+build !wireinject

package main

import (
	"context"
	"github.com/google/wire"
	"github.com/jmoiron/sqlx"
	"github.com/miya-masa/go-clean-webapp/interface/database"
	"github.com/miya-masa/go-clean-webapp/interface/presenter"
	"github.com/miya-masa/go-clean-webapp/usecase"
	"github.com/miya-masa/go-clean-webapp/web"
)

import (
	_ "github.com/lib/pq"
)

// Injectors from injector.go:

func setupApplication(ctx context.Context) (Application, error) {
	sqlxDB, err := db(ctx)
	if err != nil {
		return Application{}, err
	}
	accountRepository := database.NewAccount(sqlxDB)
	accountInputPort := usecase.NewAccountInteractor(accountRepository)
	accountPresenter := &presenter.AccountPresenter{}
	accountHandler := web.NewAccountHandler(accountInputPort, accountPresenter)
	application, err := newApplication(ctx, accountHandler)
	if err != nil {
		return Application{}, err
	}
	return application, nil
}

// injector.go:

// applicationSet is the Wire provider set for the Guestbook application that
// does not depend on the underlying platform.
var applicationSet = wire.NewSet(
	newApplication,
)

func db(ctx context.Context) (*sqlx.DB, error) {
	return sqlx.Connect("postgres", "user=miya password=miya dbname=miya sslmode=disable")
}
